var index = lunr(function () {this.field('title', {boost: 10}), this.field('body'), this.ref('id')});
var sites = Array();
index.add({ id: 0, title: 'index', body: "<div class='function'><h2>TLLUT is a small library for Lua unit testing<br></h2><p>   =============================================<br> <br> Licensing<br> =========<br> <br> Copyright (c) 2015 Yannick Pflanzer<br> <br> <br> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:<br> <br> The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.<br> <br> Example:<br>  <pre class='code'><code><br> local tllut = require('src.tllut')<br> <br> function sometest()<br> print('Running test!')<br> assertEquals('x', 'x')<br> assertEquals(123, 321)<br> end<br> <br> function otherTest()<br> assertEquals(0,0)<br> assertEquals(true, false)<br> <br> assertArrayEquals({'Hello', 'World'}, {'ROFL', 'LOL'})<br> assertArrayEquals({0, 0}, {0, 0})<br> end<br> <br> function emptyTest()<br> <br> end<br> <br> tllut:addSuite({<br> ['sometest'] = sometest,<br> ['otherTest'] = otherTest,<br> ['emptyTest'] = emptyTest<br> })<br> <br> tllut:runAll()<br> tllut:printResult()<br> </code></pre><br> </p></div>"});
sites.push({title: 'index',link: 'index.html'});
index.add({ id: 0, title: 'tllut.lua', body: "<div class='function'><h2>function tllut:addSuite(s)</h2><p> Adds a suite to the current testing setup<br> <br> The table should be structured like<br>  <pre class='code'><code><br>  function functionA() end<br>  function functionB() end<br> <br>  local suite = { ['functionA'] = functionA, ['functionB'] = functionB }<br> </code></pre><br> </p><p><h3>Parameter</h3><p><strong>s</strong> <div class='indented'>A table containing all functions to test</div></p> </p></div><div class='function'><h2>function tllut:runAll()</h2><p> Runs all suites registered with the current testing setup<br> </p></div><div class='function'><h2>function tllut:printResult()</h2><p> Prints the result of the current testing setup.<br> </p></div><div class='function'><h2>function assertEquals(expected, actual, failmsg)</h2><p> Checks if the arguments are equal<br> </p><p><h3>Parameter</h3><p><strong>expected</strong> <div class='indented'>The expected value</div></p> <p><strong>actual</strong> <div class='indented'>The actual value that was found</div></p> <p><strong>failmsg</strong> <div class='indented'>An optional message that gets printed at failure</div></p> </p></div><div class='function'><h2>function assertArrayEquals(expected, actual, failmsg)</h2><p> Checks if the argument tables are equal<br> </p><p><h3>Parameter</h3><p><strong>expected</strong> <div class='indented'>The expected value</div></p> <p><strong>actual</strong> <div class='indented'>The actual value that was found</div></p> <p><strong>failmsg</strong> <div class='indented'>An optional message that gets printed at failure</div></p> </p></div>"});
sites.push({title: 'tllut.lua',link: 'tllut.lua.html'});
